= form_with model: task, local: true do |f|
  / Error messages
  - if task.errors.any?
    .bg-red-50.border-l-4.border-red-500.text-red-700.p-4.mb-6.rounded role="alert"
      h5.font-bold.mb-2
        = pluralize(task.errors.count, "error")
        |  prohibited this task from being saved:
      ul.list-disc.list-inside.space-y-1
        - task.errors.full_messages.each do |message|
          li = message

  / Title field
  .mb-6
    = f.label :title, class: 'block text-sm font-medium text-gray-700 mb-2'
    = f.text_field :title, class: "w-full px-4 py-2 border #{task.errors[:title].any? ? 'border-red-500' : 'border-gray-300'} rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500", placeholder: 'Enter task title', required: true
    - if task.errors[:title].any?
      p.text-red-500.text-sm.mt-1 = task.errors[:title].first
    p.text-gray-500.text-sm.mt-1 Enter a descriptive title for your task (3-100 characters)

  / Description field
  .mb-6
    = f.label :description, class: 'block text-sm font-medium text-gray-700 mb-2'
    = f.text_area :description, rows: 5, class: "w-full px-4 py-2 border #{task.errors[:description].any? ? 'border-red-500' : 'border-gray-300'} rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500", placeholder: 'Enter task description (optional)'
    - if task.errors[:description].any?
      p.text-red-500.text-sm.mt-1 = task.errors[:description].first
    p.text-gray-500.text-sm.mt-1 Provide additional details about this task (max 1000 characters)

  / Status and Priority row
  .grid.grid-cols-1.md:grid-cols-2.gap-6.mb-6
    div
      = f.label :status, class: 'block text-sm font-medium text-gray-700 mb-2'
      = f.select :status, Task.statuses.keys.map { |s| [s.titleize, s] }, {}, class: "w-full px-4 py-2 border #{task.errors[:status].any? ? 'border-red-500' : 'border-gray-300'} rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500", required: true
      - if task.errors[:status].any?
        p.text-red-500.text-sm.mt-1 = task.errors[:status].first

    div
      = f.label :priority, class: 'block text-sm font-medium text-gray-700 mb-2'
      = f.select :priority, Task.priorities.keys.map { |p| [p.titleize, p] }, {}, class: "w-full px-4 py-2 border #{task.errors[:priority].any? ? 'border-red-500' : 'border-gray-300'} rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500", required: true
      - if task.errors[:priority].any?
        p.text-red-500.text-sm.mt-1 = task.errors[:priority].first

  / Due date field
  .mb-6
    = f.label :due_date, class: 'block text-sm font-medium text-gray-700 mb-2'
    = f.date_field :due_date, class: "w-full px-4 py-2 border #{task.errors[:due_date].any? ? 'border-red-500' : 'border-gray-300'} rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500", min: Date.today, required: true
    - if task.errors[:due_date].any?
      p.text-red-500.text-sm.mt-1 = task.errors[:due_date].first
    p.text-gray-500.text-sm.mt-1 Select when this task should be completed

  / Submit button
  .mt-8
    = f.submit task.new_record? ? 'Create Task' : 'Update Task', class: 'w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-md shadow-md transition'
